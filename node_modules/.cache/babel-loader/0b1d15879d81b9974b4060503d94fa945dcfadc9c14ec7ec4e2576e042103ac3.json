{"ast":null,"code":"var _jsxFileName = \"/home/tarang/index/demo/src/contexts/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { theDarkTheme, theLightTheme } from '../theme/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nfunction ThemeContextProvider(props) {\n  _s();\n  // eslint-disable-next-line\n  const [theme, setTheme] = useState(theLightTheme);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [isDark, setDark] = useState(false);\n  const setHandleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n  const changeTheme = () => {\n    if (isDark) {\n      setTheme(theLightTheme);\n      setDark(false);\n    } else {\n      setTheme(theDarkTheme);\n      setDark(true);\n    }\n  };\n  const value = {\n    theme,\n    drawerOpen,\n    setHandleDrawer,\n    changeTheme,\n    isDark\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(ThemeContextProvider, \"kDYwtBPj8371j5yUCyUBlKr+VHI=\");\n_c = ThemeContextProvider;\nexport default ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useState","theDarkTheme","theLightTheme","ThemeContext","ThemeContextProvider","props","theme","setTheme","drawerOpen","setDrawerOpen","isDark","setDark","setHandleDrawer","changeTheme","value","children"],"sources":["/home/tarang/index/demo/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nimport { theDarkTheme, theLightTheme } from '../theme/theme';\n\nexport const ThemeContext = createContext()\n\nfunction ThemeContextProvider(props) {\n    // eslint-disable-next-line\n    const [theme, setTheme] = useState(theLightTheme);\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [isDark, setDark] = useState(false);\n\n    const setHandleDrawer = () => {\n        setDrawerOpen(!drawerOpen)\n    }\n\n    const changeTheme = () => {\n        if (isDark) {\n            setTheme(theLightTheme);\n            setDark(false);\n        } else {\n            setTheme(theDarkTheme);\n            setDark(true);\n        }\n    }\n\n    const value = { theme, drawerOpen, setHandleDrawer, changeTheme, isDark }\n    return (\n        <ThemeContext.Provider value={value}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\n\nexport default ThemeContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAEtD,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC;AAE7D,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAE;AAE3C,SAASK,oBAAoB,CAACC,KAAK,EAAE;EAAA;EACjC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACE,aAAa,CAAC;EACjD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,MAAM,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMY,eAAe,GAAG,MAAM;IAC1BH,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMK,WAAW,GAAG,MAAM;IACtB,IAAIH,MAAM,EAAE;MACRH,QAAQ,CAACL,aAAa,CAAC;MACvBS,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM;MACHJ,QAAQ,CAACN,YAAY,CAAC;MACtBU,OAAO,CAAC,IAAI,CAAC;IACjB;EACJ,CAAC;EAED,MAAMG,KAAK,GAAG;IAAER,KAAK;IAAEE,UAAU;IAAEI,eAAe;IAAEC,WAAW;IAAEH;EAAO,CAAC;EACzE,oBACI,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEI,KAAM;IAAA,UAC/BT,KAAK,CAACU;EAAQ;IAAA;IAAA;IAAA;EAAA,QACK;AAEhC;AAAC,GA1BQX,oBAAoB;AAAA,KAApBA,oBAAoB;AA6B7B,eAAeA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}